/* lock_server_config.cpp

 Generated by phxrpc_pb2server from lock.proto

*/

#include "lock.pb.h"
#include "lock_server_config.h"


LockServerConfig::LockServerConfig() {}

LockServerConfig::~LockServerConfig() {}

bool LockServerConfig::Read(const char *config_file) {
    bool ret{ep_server_config_.Read(config_file)};

    if (0 == strlen(ep_server_config_.GetPackageName())) {
        ep_server_config_.SetPackageName(phxqueue::comm::proto::GetLockInfoRequest::
                                         default_instance().GetDescriptor()->
                                         file()->package().c_str());
    }

    // read Extra
    phxrpc::Config config;
    if (!config.InitConfig(config_file)) {
        return false;
    }
    ret &= config.ReadItem("Lock", "Topic", topic_, sizeof(topic_));
    ret &= config.ReadItem("Lock", "DataDirPath", data_dir_path_, sizeof(data_dir_path_));
    ret &= config.ReadItem("Lock", "PhxQueueGlobalConfigPath", phxqueue_global_config_path_, sizeof(phxqueue_global_config_path_));
    ret &= config.ReadItem("Lock", "PaxosPort", &paxos_port_);

    return ret;
}

phxrpc::HshaServerConfig &LockServerConfig::GetHshaServerConfig() {
    return ep_server_config_;
}


const char *LockServerConfig::GetTopic() const {
    return topic_;
}

const char *LockServerConfig::GetDataDirPath() const {
    return data_dir_path_;
}

const char *LockServerConfig::GetPhxQueueGlobalConfigPath() const {
    return phxqueue_global_config_path_;
}

int LockServerConfig::GetPaxosPort() const {
    return paxos_port_;
}


//gzrd_Lib_CPP_Version_ID--start
#ifndef GZRD_SVN_ATTR
#define GZRD_SVN_ATTR "0"
#endif
static char gzrd_Lib_CPP_Version_ID[] __attribute__((used))="$HeadURL: http://scm-gy.tencent.com/gzrd/gzrd_mail_rep/phoenix_proj/trunk/phxqueue/phxqueue_phxrpc/src/lock/lock_server_config.cpp $ $Id: lock_server_config.cpp 2143928 2017-06-29 09:20:49Z walnuthe $ " GZRD_SVN_ATTR "__file__";
// gzrd_Lib_CPP_Version_ID--end

