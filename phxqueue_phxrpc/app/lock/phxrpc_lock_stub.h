/* phxrpc_lock_stub.h

 Generated by phxrpc_pb2client from lock.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#pragma once

#include "lock.pb.h"


namespace phxrpc {


class BaseTcpStream;
class ClientMonitor;


}


class LockStub {
  public:
    LockStub(phxrpc::BaseTcpStream &socket, phxrpc::ClientMonitor &client_monitor);
    ~LockStub();

    void SetKeepAlive(const bool keep_alive);

    int PHXEcho(const google::protobuf::StringValue &req,
                google::protobuf::StringValue *resp);

    int GetLockInfo(const phxqueue::comm::proto::GetLockInfoRequest &req,
                    phxqueue::comm::proto::GetLockInfoResponse *resp);

    int AcquireLock(const phxqueue::comm::proto::AcquireLockRequest &req,
                    phxqueue::comm::proto::AcquireLockResponse *resp);

  private:
    phxrpc::BaseTcpStream &socket_;
    phxrpc::ClientMonitor &client_monitor_;
    bool keep_alive_;
};

