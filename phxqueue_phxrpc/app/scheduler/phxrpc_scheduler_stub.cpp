/* phxrpc_scheduler_stub.cpp

 Generated by phxrpc_pb2client from scheduler.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#include "phxrpc/rpc.h"
#include "phxrpc/network.h"

#include "phxrpc_scheduler_stub.h"
#include "scheduler.pb.h"


SchedulerStub::SchedulerStub(phxrpc::BaseTcpStream &socket, phxrpc::ClientMonitor &client_monitor)
    : socket_(socket), client_monitor_(client_monitor), keep_alive_(false) {}

SchedulerStub::~SchedulerStub() {}

void SchedulerStub::SetKeepAlive(const bool keep_alive) {
    keep_alive_ = keep_alive;
}

int SchedulerStub::PHXEcho(const google::protobuf::StringValue &req,
                           google::protobuf::StringValue *resp) {
    phxrpc::HttpCaller caller(socket_, client_monitor_);
    caller.SetURI("/phxqueue_phxrpc.scheduler/PHXEcho", -1);
    caller.SetKeepAlive(keep_alive_);
    return caller.Call(req, resp);
}

int SchedulerStub::GetAddrScale(const phxqueue::comm::proto::GetAddrScaleRequest &req,
                                phxqueue::comm::proto::GetAddrScaleResponse *resp) {
    phxrpc::HttpCaller caller(socket_, client_monitor_);
    caller.SetURI("/phxqueue_phxrpc.scheduler/GetAddrScale", 1);
    caller.SetKeepAlive(keep_alive_);
    return caller.Call(req, resp);
}


//gzrd_Lib_CPP_Version_ID--start
#ifndef GZRD_SVN_ATTR
#define GZRD_SVN_ATTR "0"
#endif
static char gzrd_Lib_CPP_Version_ID[] __attribute__((used))="$HeadURL: http://scm-gy.tencent.com/gzrd/gzrd_mail_rep/phoenix_proj/trunk/phxqueue/phxqueue_phxrpc/src/scheduler/phxrpc_scheduler_stub.cpp $ $Id: phxrpc_scheduler_stub.cpp 2143928 2017-06-29 09:20:49Z walnuthe $ " GZRD_SVN_ATTR "__file__";
// gzrd_Lib_CPP_Version_ID--end

